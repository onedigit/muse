/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.sirolf2009.muse.core.model;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class TopicsNode extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -3770518333732226487L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"TopicsNode\",\"namespace\":\"com.sirolf2009.muse.core.model\",\"fields\":[{\"name\":\"ID\",\"type\":\"string\"},{\"name\":\"Name\",\"type\":\"string\"},{\"name\":\"Topics\",\"type\":{\"type\":\"array\",\"items\":\"string\"}},{\"name\":\"KeyDeserializer\",\"type\":\"string\"},{\"name\":\"ValueDeserializer\",\"type\":\"string\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<TopicsNode> ENCODER =
      new BinaryMessageEncoder<TopicsNode>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<TopicsNode> DECODER =
      new BinaryMessageDecoder<TopicsNode>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<TopicsNode> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<TopicsNode> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<TopicsNode>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this TopicsNode to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a TopicsNode from a ByteBuffer. */
  public static TopicsNode fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.CharSequence ID;
  @Deprecated public java.lang.CharSequence Name;
  @Deprecated public java.util.List<java.lang.CharSequence> Topics;
  @Deprecated public java.lang.CharSequence KeyDeserializer;
  @Deprecated public java.lang.CharSequence ValueDeserializer;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public TopicsNode() {}

  /**
   * All-args constructor.
   * @param ID The new value for ID
   * @param Name The new value for Name
   * @param Topics The new value for Topics
   * @param KeyDeserializer The new value for KeyDeserializer
   * @param ValueDeserializer The new value for ValueDeserializer
   */
  public TopicsNode(java.lang.CharSequence ID, java.lang.CharSequence Name, java.util.List<java.lang.CharSequence> Topics, java.lang.CharSequence KeyDeserializer, java.lang.CharSequence ValueDeserializer) {
    this.ID = ID;
    this.Name = Name;
    this.Topics = Topics;
    this.KeyDeserializer = KeyDeserializer;
    this.ValueDeserializer = ValueDeserializer;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return ID;
    case 1: return Name;
    case 2: return Topics;
    case 3: return KeyDeserializer;
    case 4: return ValueDeserializer;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: ID = (java.lang.CharSequence)value$; break;
    case 1: Name = (java.lang.CharSequence)value$; break;
    case 2: Topics = (java.util.List<java.lang.CharSequence>)value$; break;
    case 3: KeyDeserializer = (java.lang.CharSequence)value$; break;
    case 4: ValueDeserializer = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'ID' field.
   * @return The value of the 'ID' field.
   */
  public java.lang.CharSequence getID() {
    return ID;
  }

  /**
   * Sets the value of the 'ID' field.
   * @param value the value to set.
   */
  public void setID(java.lang.CharSequence value) {
    this.ID = value;
  }

  /**
   * Gets the value of the 'Name' field.
   * @return The value of the 'Name' field.
   */
  public java.lang.CharSequence getName() {
    return Name;
  }

  /**
   * Sets the value of the 'Name' field.
   * @param value the value to set.
   */
  public void setName(java.lang.CharSequence value) {
    this.Name = value;
  }

  /**
   * Gets the value of the 'Topics' field.
   * @return The value of the 'Topics' field.
   */
  public java.util.List<java.lang.CharSequence> getTopics() {
    return Topics;
  }

  /**
   * Sets the value of the 'Topics' field.
   * @param value the value to set.
   */
  public void setTopics(java.util.List<java.lang.CharSequence> value) {
    this.Topics = value;
  }

  /**
   * Gets the value of the 'KeyDeserializer' field.
   * @return The value of the 'KeyDeserializer' field.
   */
  public java.lang.CharSequence getKeyDeserializer() {
    return KeyDeserializer;
  }

  /**
   * Sets the value of the 'KeyDeserializer' field.
   * @param value the value to set.
   */
  public void setKeyDeserializer(java.lang.CharSequence value) {
    this.KeyDeserializer = value;
  }

  /**
   * Gets the value of the 'ValueDeserializer' field.
   * @return The value of the 'ValueDeserializer' field.
   */
  public java.lang.CharSequence getValueDeserializer() {
    return ValueDeserializer;
  }

  /**
   * Sets the value of the 'ValueDeserializer' field.
   * @param value the value to set.
   */
  public void setValueDeserializer(java.lang.CharSequence value) {
    this.ValueDeserializer = value;
  }

  /**
   * Creates a new TopicsNode RecordBuilder.
   * @return A new TopicsNode RecordBuilder
   */
  public static com.sirolf2009.muse.core.model.TopicsNode.Builder newBuilder() {
    return new com.sirolf2009.muse.core.model.TopicsNode.Builder();
  }

  /**
   * Creates a new TopicsNode RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new TopicsNode RecordBuilder
   */
  public static com.sirolf2009.muse.core.model.TopicsNode.Builder newBuilder(com.sirolf2009.muse.core.model.TopicsNode.Builder other) {
    return new com.sirolf2009.muse.core.model.TopicsNode.Builder(other);
  }

  /**
   * Creates a new TopicsNode RecordBuilder by copying an existing TopicsNode instance.
   * @param other The existing instance to copy.
   * @return A new TopicsNode RecordBuilder
   */
  public static com.sirolf2009.muse.core.model.TopicsNode.Builder newBuilder(com.sirolf2009.muse.core.model.TopicsNode other) {
    return new com.sirolf2009.muse.core.model.TopicsNode.Builder(other);
  }

  /**
   * RecordBuilder for TopicsNode instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<TopicsNode>
    implements org.apache.avro.data.RecordBuilder<TopicsNode> {

    private java.lang.CharSequence ID;
    private java.lang.CharSequence Name;
    private java.util.List<java.lang.CharSequence> Topics;
    private java.lang.CharSequence KeyDeserializer;
    private java.lang.CharSequence ValueDeserializer;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.sirolf2009.muse.core.model.TopicsNode.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.ID)) {
        this.ID = data().deepCopy(fields()[0].schema(), other.ID);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.Name)) {
        this.Name = data().deepCopy(fields()[1].schema(), other.Name);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.Topics)) {
        this.Topics = data().deepCopy(fields()[2].schema(), other.Topics);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.KeyDeserializer)) {
        this.KeyDeserializer = data().deepCopy(fields()[3].schema(), other.KeyDeserializer);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.ValueDeserializer)) {
        this.ValueDeserializer = data().deepCopy(fields()[4].schema(), other.ValueDeserializer);
        fieldSetFlags()[4] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing TopicsNode instance
     * @param other The existing instance to copy.
     */
    private Builder(com.sirolf2009.muse.core.model.TopicsNode other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.ID)) {
        this.ID = data().deepCopy(fields()[0].schema(), other.ID);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.Name)) {
        this.Name = data().deepCopy(fields()[1].schema(), other.Name);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.Topics)) {
        this.Topics = data().deepCopy(fields()[2].schema(), other.Topics);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.KeyDeserializer)) {
        this.KeyDeserializer = data().deepCopy(fields()[3].schema(), other.KeyDeserializer);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.ValueDeserializer)) {
        this.ValueDeserializer = data().deepCopy(fields()[4].schema(), other.ValueDeserializer);
        fieldSetFlags()[4] = true;
      }
    }

    /**
      * Gets the value of the 'ID' field.
      * @return The value.
      */
    public java.lang.CharSequence getID() {
      return ID;
    }

    /**
      * Sets the value of the 'ID' field.
      * @param value The value of 'ID'.
      * @return This builder.
      */
    public com.sirolf2009.muse.core.model.TopicsNode.Builder setID(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.ID = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'ID' field has been set.
      * @return True if the 'ID' field has been set, false otherwise.
      */
    public boolean hasID() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'ID' field.
      * @return This builder.
      */
    public com.sirolf2009.muse.core.model.TopicsNode.Builder clearID() {
      ID = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'Name' field.
      * @return The value.
      */
    public java.lang.CharSequence getName() {
      return Name;
    }

    /**
      * Sets the value of the 'Name' field.
      * @param value The value of 'Name'.
      * @return This builder.
      */
    public com.sirolf2009.muse.core.model.TopicsNode.Builder setName(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.Name = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'Name' field has been set.
      * @return True if the 'Name' field has been set, false otherwise.
      */
    public boolean hasName() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'Name' field.
      * @return This builder.
      */
    public com.sirolf2009.muse.core.model.TopicsNode.Builder clearName() {
      Name = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'Topics' field.
      * @return The value.
      */
    public java.util.List<java.lang.CharSequence> getTopics() {
      return Topics;
    }

    /**
      * Sets the value of the 'Topics' field.
      * @param value The value of 'Topics'.
      * @return This builder.
      */
    public com.sirolf2009.muse.core.model.TopicsNode.Builder setTopics(java.util.List<java.lang.CharSequence> value) {
      validate(fields()[2], value);
      this.Topics = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'Topics' field has been set.
      * @return True if the 'Topics' field has been set, false otherwise.
      */
    public boolean hasTopics() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'Topics' field.
      * @return This builder.
      */
    public com.sirolf2009.muse.core.model.TopicsNode.Builder clearTopics() {
      Topics = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'KeyDeserializer' field.
      * @return The value.
      */
    public java.lang.CharSequence getKeyDeserializer() {
      return KeyDeserializer;
    }

    /**
      * Sets the value of the 'KeyDeserializer' field.
      * @param value The value of 'KeyDeserializer'.
      * @return This builder.
      */
    public com.sirolf2009.muse.core.model.TopicsNode.Builder setKeyDeserializer(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.KeyDeserializer = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'KeyDeserializer' field has been set.
      * @return True if the 'KeyDeserializer' field has been set, false otherwise.
      */
    public boolean hasKeyDeserializer() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'KeyDeserializer' field.
      * @return This builder.
      */
    public com.sirolf2009.muse.core.model.TopicsNode.Builder clearKeyDeserializer() {
      KeyDeserializer = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'ValueDeserializer' field.
      * @return The value.
      */
    public java.lang.CharSequence getValueDeserializer() {
      return ValueDeserializer;
    }

    /**
      * Sets the value of the 'ValueDeserializer' field.
      * @param value The value of 'ValueDeserializer'.
      * @return This builder.
      */
    public com.sirolf2009.muse.core.model.TopicsNode.Builder setValueDeserializer(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.ValueDeserializer = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'ValueDeserializer' field has been set.
      * @return True if the 'ValueDeserializer' field has been set, false otherwise.
      */
    public boolean hasValueDeserializer() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'ValueDeserializer' field.
      * @return This builder.
      */
    public com.sirolf2009.muse.core.model.TopicsNode.Builder clearValueDeserializer() {
      ValueDeserializer = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public TopicsNode build() {
      try {
        TopicsNode record = new TopicsNode();
        record.ID = fieldSetFlags()[0] ? this.ID : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.Name = fieldSetFlags()[1] ? this.Name : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.Topics = fieldSetFlags()[2] ? this.Topics : (java.util.List<java.lang.CharSequence>) defaultValue(fields()[2]);
        record.KeyDeserializer = fieldSetFlags()[3] ? this.KeyDeserializer : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.ValueDeserializer = fieldSetFlags()[4] ? this.ValueDeserializer : (java.lang.CharSequence) defaultValue(fields()[4]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<TopicsNode>
    WRITER$ = (org.apache.avro.io.DatumWriter<TopicsNode>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<TopicsNode>
    READER$ = (org.apache.avro.io.DatumReader<TopicsNode>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
